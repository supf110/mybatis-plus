package ${package.ServiceImpl};

import com.baomidou.mybatisplus.core.conditions.Wrapper;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {
        @Override
    	public ${entity} getOne(Wrapper<${entity}> queryWrapper) {
    		if(queryWrapper instanceof QueryWrapper) {
            				QueryWrapper<${entity}> query = (QueryWrapper) queryWrapper;
            				query.last("limit 20");
            				return super.getOne(query);
            }
            throw new RuntimeException("not instance of QueryWrapper");
    	}

    	@Override
    	public List<${entity}> list(Wrapper<${entity}> queryWrapper) {
    		if(queryWrapper instanceof QueryWrapper) {
                QueryWrapper<${entity}> query = (QueryWrapper) queryWrapper;
                query.last("limit 200");
                List<${entity}> list = super.list(query);
                if (list.size() == 200) {
                        throw new RuntimeException("list query not > 200");
                }
                return list;
            }
            throw new RuntimeException("not instance of QueryWrapper");
    	}

    	@Override
        public boolean update(Wrapper<${entity}> updateWrapper) {
            throw new RuntimeException("please use updateById method");
        }

        @Override
        public List<${entity}> list() {
            throw new RuntimeException("please do not full query");
        }
}

